Multiple Choice Quiz
(See related pages)

1		
The waterfall model of software development is
		A)	A reasonable approach when requirements are well defined.
		B)	A good approach when a working program is required quickly.
		C)	The best approach to use for projects with large development teams.
		D)	An old fashioned model that is rarely used any more.
2		
The incremental model of software development is
		A)	A reasonable approach when requirements are well defined.
		B)	A good approach when a working core product is required quickly.
		C)	The best approach to use for projects with large development teams.
		D)	A revolutionary model that is not used for commercial products.
3		
Evolutionary software process models
		A)	Are iterative in nature.
		B)	Can easily accommodate product requirements changes.
		C)	Do not generally produce throwaway systems.
		D)	All of the above.
4		
The prototyping model of software development is
		A)	A reasonable approach when requirements are well defined.
		B)	A useful approach when a customer cannot define requirements clearly.
		C)	The best approach to use for projects with large development teams.
		D)	A risky model that rarely produces a meaningful product.
5		
The spiral model of software development
		A)	Ends with the delivery of the software product.
		B)	Is more chaotic than the incremental model.
		C)	Includes project risks evaluation during each iteration.
		D)	All of the above.
6		
The concurrent development model is
		A)	Another name for concurrent engineering.
		B)	Defines events that trigger engineering activity state transitions.
		C)	Only used for development of parallel or distributed systems.
		D)	Used whenever a large number of change requests are anticipated.
		E)	Both a and b
7		
The component-based development model is
		A)	Only appropriate for computer hardware design.
		B)	Not able to support the development of reusable components.
		C)	Dependent on object technologies for support.
		D)	Not cost effective by known quantifiable software metrics.
8		
The formal methods model of software development makes use of mathematical methods to
		A)	Define the specification for computer-based systems.
		B)	Develop defect free computer-based systems.
		C)	Verify the correctness of computer-based systems.
		D)	All of the above.
9		
Which of these is not one of the phase names defined by the Unified Process model for software development?
		A)	Inception phase
		B)	Elaboration phase
		C)	Construction phase
		D)	Validation phase
10		
Which of these is not a characteristic of Personal Software Process?
		A)	Emphasizes personal measurement of work product.
		B)	Practitioner requires careful supervision by the project manager.
		C)	Individual practitioner is responsible for estimating and scheduling.
		D)	Practitioner is empowered to control quality of software work products.
11		
Which of these are objectives of Team Software Process?
		A)	Accelerate software process improvement
		B)	Allow better time management by highly trained professionals
		C)	Build self-directed software teams
		D)	Show managers how to reduce costs and sustain quality
		E)	Both b and c
12		
Process technology tools allow software organizations to compress schedules by skipping unimportant activities.
		A)	True
		B)	False
13		
It is generally accepted that one cannot have weak software processes and create high quality end products.
		A)	True
		B)	False
